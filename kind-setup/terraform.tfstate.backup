{
  "version": 4,
  "terraform_version": "1.10.3",
  "serial": 259,
  "lineage": "543cf6db-3f51-fb78-cc45-a9305fa1213e",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argo_rollouts",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-rollouts",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-rollouts",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.6.4",
                "chart": "argo-rollouts",
                "first_deployed": 1737581660,
                "last_deployed": 1737581660,
                "name": "argo-rollouts",
                "namespace": "argo-rollouts",
                "notes": "",
                "revision": 1,
                "values": "{\"controller\":{\"metrics\":{\"enabled\":true}},\"dashboard\":{\"enabled\":false},\"podAnnotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":8090,\"prometheus.io/scrape\":true}}",
                "version": "2.34.1"
              }
            ],
            "name": "argo-rollouts",
            "namespace": "argo-rollouts",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "controller.metrics.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "dashboard.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "podAnnotations.prometheus\\.io/path",
                "type": "",
                "value": "/metrics"
              },
              {
                "name": "podAnnotations.prometheus\\.io/port",
                "type": "",
                "value": "8090"
              },
              {
                "name": "podAnnotations.prometheus\\.io/scrape",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "2.34.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.13.3",
                "chart": "argo-cd",
                "first_deployed": 1737581658,
                "last_deployed": 1737581658,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"server\":{\"enable\":{\"proxy\":{\"extension\":true}},\"extensions\":{\"enabled\":true,\"extensionList\":[{\"env\":[{\"name\":\"EXTENSION_URL\",\"value\":\"https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.6/extension.tar\"}],\"name\":\"rollout-extension\"}],\"image\":{\"repository\":\"quay.io/argoprojlabs/argocd-extension-installer\"}},\"extraArgs\":[\"--insecure\"]}}",
                "version": "7.7.16"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "server.enable.proxy.extension",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.extensions.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.extensions.extensionList[0].env[0].name",
                "type": "",
                "value": "EXTENSION_URL"
              },
              {
                "name": "server.extensions.extensionList[0].env[0].value",
                "type": "",
                "value": "https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.6/extension.tar"
              },
              {
                "name": "server.extensions.extensionList[0].name",
                "type": "",
                "value": "rollout-extension"
              },
              {
                "name": "server.extensions.image.repository",
                "type": "",
                "value": "quay.io/argoprojlabs/argocd-extension-installer"
              },
              {
                "name": "server.extraArgs[0]",
                "type": "",
                "value": "--insecure"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "7.7.16",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "chart_museum",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "chartmuseum",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "chartmuseum",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.16.2",
                "chart": "chartmuseum",
                "first_deployed": 1737581658,
                "last_deployed": 1737581658,
                "name": "chartmuseum",
                "namespace": "chartmuseum",
                "notes": "** Please be patient while the chart is being deployed **\n\nGet the ChartMuseum URL by running:\n\n  export POD_NAME=$(kubectl get pods --namespace chartmuseum -l \"app=chartmuseum\" -l \"release=chartmuseum\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo http://127.0.0.1:8080/\n  kubectl port-forward $POD_NAME 8080:8080 --namespace chartmuseum\n",
                "revision": 1,
                "values": "{\"env\":{\"open\":{\"DEBUG\":true,\"DISABLE_API\":false,\"DISABLE_STATEFILES\":true,\"STORAGE\":\"local\"}},\"serviceAccount\":{\"create\":true}}",
                "version": "3.10.3"
              }
            ],
            "name": "chartmuseum",
            "namespace": "chartmuseum",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://chartmuseum.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "env.open.DEBUG",
                "type": "",
                "value": "true"
              },
              {
                "name": "env.open.DISABLE_API",
                "type": "",
                "value": "false"
              },
              {
                "name": "env.open.DISABLE_STATEFILES",
                "type": "",
                "value": "true"
              },
              {
                "name": "env.open.STORAGE",
                "type": "",
                "value": "local"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "3.10.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_base",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "base",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-base",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.20.2",
                "chart": "base",
                "first_deployed": 1737581657,
                "last_deployed": 1737581657,
                "name": "istio-base",
                "namespace": "istio-system",
                "notes": "Istio base successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-base\n  $ helm get all istio-base\n",
                "revision": 1,
                "values": "{}",
                "version": "1.20.2"
              }
            ],
            "name": "istio-base",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.20.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gateway",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-ingressgateway",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.20.2",
                "chart": "gateway",
                "first_deployed": 1737581679,
                "last_deployed": 1737581679,
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "notes": "\"istio-ingressgateway\" successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-ingressgateway\n  $ helm get all istio-ingressgateway\n\nNext steps:\n  * Deploy an HTTP Gateway: https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/\n  * Deploy an HTTPS Gateway: https://istio.io/latest/docs/tasks/traffic-management/ingress/secure-ingress/\n",
                "revision": 1,
                "values": "{\"autoscaling\":{\"maxReplicas\":6,\"minReplicas\":2},\"service\":{\"ports\":[{\"name\":\"status-port\",\"nodePort\":30021,\"port\":15021,\"protocol\":\"TCP\",\"targetPort\":15021},{\"name\":\"http2\",\"nodePort\":30080,\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80},{\"name\":\"https\",\"nodePort\":30443,\"port\":443,\"protocol\":\"TCP\",\"targetPort\":443}],\"type\":\"NodePort\"}}",
                "version": "1.20.2"
              }
            ],
            "name": "istio-ingressgateway",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoscaling.maxReplicas",
                "type": "",
                "value": "6"
              },
              {
                "name": "autoscaling.minReplicas",
                "type": "",
                "value": "2"
              },
              {
                "name": "service.ports[0].name",
                "type": "",
                "value": "status-port"
              },
              {
                "name": "service.ports[0].nodePort",
                "type": "",
                "value": "30021"
              },
              {
                "name": "service.ports[0].port",
                "type": "",
                "value": "15021"
              },
              {
                "name": "service.ports[0].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[0].targetPort",
                "type": "",
                "value": "15021"
              },
              {
                "name": "service.ports[1].name",
                "type": "",
                "value": "http2"
              },
              {
                "name": "service.ports[1].nodePort",
                "type": "",
                "value": "30080"
              },
              {
                "name": "service.ports[1].port",
                "type": "",
                "value": "80"
              },
              {
                "name": "service.ports[1].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[1].targetPort",
                "type": "",
                "value": "80"
              },
              {
                "name": "service.ports[2].name",
                "type": "",
                "value": "https"
              },
              {
                "name": "service.ports[2].nodePort",
                "type": "",
                "value": "30443"
              },
              {
                "name": "service.ports[2].port",
                "type": "",
                "value": "443"
              },
              {
                "name": "service.ports[2].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[2].targetPort",
                "type": "",
                "value": "443"
              },
              {
                "name": "service.type",
                "type": "",
                "value": "NodePort"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.20.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istiod",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "istiod",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.20.2",
                "chart": "istiod",
                "first_deployed": 1737581661,
                "last_deployed": 1737581661,
                "name": "istio",
                "namespace": "istio-system",
                "notes": "\"istiod\" successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio\n  $ helm get all istio\n\nNext steps:\n  * Deploy a Gateway: https://istio.io/latest/docs/setup/additional-setup/gateway/\n  * Try out our tasks to get started on common configurations:\n    * https://istio.io/latest/docs/tasks/traffic-management\n    * https://istio.io/latest/docs/tasks/security/\n    * https://istio.io/latest/docs/tasks/policy-enforcement/\n  * Review the list of actively supported releases, CVE publications and our hardening guide:\n    * https://istio.io/latest/docs/releases/supported-releases/\n    * https://istio.io/latest/news/security/\n    * https://istio.io/latest/docs/ops/best-practices/security/\n\nFor further documentation see https://istio.io website\n",
                "revision": 1,
                "values": "{}",
                "version": "1.20.2"
              }
            ],
            "name": "istio",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.20.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kiali-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kiali-server",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kiali-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.79.0",
                "chart": "kiali-server",
                "first_deployed": 1737581678,
                "last_deployed": 1737581678,
                "name": "kiali-server",
                "namespace": "istio-system",
                "notes": "Welcome to Kiali! For more details on Kiali, see: https://kiali.io\n\nThe Kiali Server [v1.79.0] has been installed in namespace [istio-system]. It will be ready soon.\n\n(Helm: Chart=[kiali-server], Release=[kiali-server], Version=[1.79.0])\n",
                "revision": 1,
                "values": "{\"auth\":{\"strategy\":\"anonymous\"},\"external_services\":{\"grafana\":{\"enabled\":true,\"url\":\"http://prometheus-grafana.prometheus.svc.cluster.local:80\"},\"prometheus\":{\"url\":\"http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090\"},\"tracing\":{\"use_grpc\":false}},\"server\":{\"web_fqdn\":\"kiali.cluster.io\"}}",
                "version": "1.79.0"
              }
            ],
            "name": "kiali-server",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kiali.org/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.strategy",
                "type": "",
                "value": "anonymous"
              },
              {
                "name": "external_services.grafana.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "external_services.grafana.url",
                "type": "",
                "value": "http://prometheus-grafana.prometheus.svc.cluster.local:80"
              },
              {
                "name": "external_services.prometheus.url",
                "type": "",
                "value": "http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090"
              },
              {
                "name": "external_services.tracing.use_grpc",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.web_fqdn",
                "type": "",
                "value": "kiali.cluster.io"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.79.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "metrics-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metrics-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.7.2",
                "chart": "metrics-server",
                "first_deployed": 1737581654,
                "last_deployed": 1737581654,
                "name": "metrics-server",
                "namespace": "kube-system",
                "notes": "CHART NAME: metrics-server\nCHART VERSION: 7.3.0\nAPP VERSION: 0.7.2\n\nDid you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.\n\n** Please be patient while the chart is being deployed **\n\nThe metric server has been deployed.\nIn a few minutes you should be able to list metrics using the following\ncommand:\n\n  kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\"\n\nWARNING: There are \"resources\" sections in the chart not set. Using \"resourcesPreset\" is not recommended for production. For production installations, please set the following values according to your workload needs:\n  - resources\n+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n",
                "revision": 1,
                "values": "{\"apiService\":{\"create\":true}}",
                "version": "7.3.0"
              }
            ],
            "name": "metrics-server",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://registry-1.docker.io/bitnamicharts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "apiService.create",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "7.3.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.63.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1737581657,
                "last_deployed": 1737581657,
                "name": "prometheus",
                "namespace": "prometheus",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace prometheus get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace prometheus $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace prometheus prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.prometheus.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace prometheus port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n",
                "revision": 1,
                "values": "{\"kubeStateMetrics\":{\"enabled\":false},\"prometheus\":{\"prometheusSpec\":{\"podMonitorSelector\":{},\"podMonitorSelectorNilUsesHelmValues\":false,\"ruleSelector\":{},\"ruleSelectorNilUsesHelmValues\":false,\"serviceMonitorSelector\":{},\"serviceMonitorSelectorNilUsesHelmValues\":false}},\"prometheusOperator\":{\"alertmanagerInstanceNamespaces\":\"\",\"denyNamespaces\":\"\",\"enabled\":true,\"namespaces\":\"\",\"prometheusInstanceNamespaces\":\"\",\"thanosRulerInstanceNamespaces\":\"\"}}",
                "version": "45.8.0"
              }
            ],
            "name": "prometheus",
            "namespace": "prometheus",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "prometheus:\n  prometheusSpec:\n    # podMonitorNamespaceSelector:\n    #   any: true\n    podMonitorSelector: {}\n    podMonitorSelectorNilUsesHelmValues: false\n    # ruleNamespaceSelector:\n    #   any: true\n    ruleSelector: {}\n    ruleSelectorNilUsesHelmValues: false\n    # serviceMonitorNamespaceSelector:\n    #   any: true\n    serviceMonitorSelector: {}\n    serviceMonitorSelectorNilUsesHelmValues: false\n\nkubeStateMetrics:\n  enabled: false\n\nprometheusOperator:\n  enabled: true\n  namespaces: ''\n  denyNamespaces: ''\n  prometheusInstanceNamespaces: ''\n  alertmanagerInstanceNamespaces: ''\n  thanosRulerInstanceNamespaces: ''"
            ],
            "verify": false,
            "version": "45.8.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argocd/gateways/argocd-gateway",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "eda8d420d5fb8918ed49bb7e56bed128558994da1268574217e7819714448711",
            "live_uid": "b4c1af20-05e1-4804-b8fa-7196c92892f1",
            "name": "argocd-gateway",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b4c1af20-05e1-4804-b8fa-7196c92892f1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argocd-gateway\n  namespace: argocd\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - argocd.cluster.io\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argocd-gateway\n  namespace: argocd\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - argocd.cluster.io\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "eda8d420d5fb8918ed49bb7e56bed128558994da1268574217e7819714448711"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd",
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argocd_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argocd/virtualservices/argo-server",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "9eb704b470917ebcd64ac6e27e4b45f0d77f685c92aed9b36b7ae022f7289513",
            "live_uid": "3317ec71-efdc-461b-a37c-586942aa4d1b",
            "name": "argo-server",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3317ec71-efdc-461b-a37c-586942aa4d1b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-server\n  namespace: argocd\nspec:\n  hosts:\n  - argocd.cluster.io\n  gateways:\n  - argocd-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argocd-server\n        port:\n          number: 80\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-server\n  namespace: argocd\nspec:\n  gateways:\n  - argocd-gateway\n  hosts:\n  - argocd.cluster.io\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argocd-server\n        port:\n          number: 80\n",
            "yaml_incluster": "9eb704b470917ebcd64ac6e27e4b45f0d77f685c92aed9b36b7ae022f7289513"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd",
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "chartmuseum_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/chartmuseum/gateways/chartmuseum-gateway",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "1accfecb4e8d28f0f8da0efab6acd4ba9263e0ecbc57fbd3b5b64449b6f958e3",
            "live_uid": "f75b31a3-7307-482d-ba76-f5cc7f8650e0",
            "name": "chartmuseum-gateway",
            "namespace": "chartmuseum",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f75b31a3-7307-482d-ba76-f5cc7f8650e0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: chartmuseum-gateway\n  namespace: chartmuseum\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - chartmuseum.cluster.io\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: chartmuseum-gateway\n  namespace: chartmuseum\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - chartmuseum.cluster.io\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "1accfecb4e8d28f0f8da0efab6acd4ba9263e0ecbc57fbd3b5b64449b6f958e3"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.chart_museum",
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "chartmuseum_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/chartmuseum/virtualservices/chartmuseum",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "d33c26b885d76ccc524e076ea0ffe14c9fe52c29e17ad8134afb68c6519f013d",
            "live_uid": "f296bf0f-a1fe-482b-818e-338383435cc7",
            "name": "chartmuseum",
            "namespace": "chartmuseum",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f296bf0f-a1fe-482b-818e-338383435cc7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: chartmuseum\n  namespace: chartmuseum\nspec:\n  hosts:\n  - chartmuseum.cluster.io\n  gateways:\n  - chartmuseum-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: chartmuseum\n        port:\n          number: 8080\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: chartmuseum\n  namespace: chartmuseum\nspec:\n  gateways:\n  - chartmuseum-gateway\n  hosts:\n  - chartmuseum.cluster.io\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: chartmuseum\n        port:\n          number: 8080\n",
            "yaml_incluster": "d33c26b885d76ccc524e076ea0ffe14c9fe52c29e17ad8134afb68c6519f013d"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.chart_museum",
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "grafana_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/prometheus/gateways/grafana",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "40a485270441d3ec952ddc90bcaaed558fc3b93d46c6c3fbc6f4f3f66704091d",
            "live_uid": "3d320aba-39eb-4fe7-be13-c8ca4c528e6e",
            "name": "grafana",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3d320aba-39eb-4fe7-be13-c8ca4c528e6e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: grafana\n  namespace: prometheus\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - grafana.cluster.io\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: grafana\n  namespace: prometheus\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - grafana.cluster.io\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "40a485270441d3ec952ddc90bcaaed558fc3b93d46c6c3fbc6f4f3f66704091d"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "grafana_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/prometheus/virtualservices/grafana",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "6d58a9a9364aad32d482b2775a06ef62458d476bc55cd7d928082d9bbb9ea2ba",
            "live_uid": "3c93256d-b905-480b-9c48-5806db475a21",
            "name": "grafana",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3c93256d-b905-480b-9c48-5806db475a21",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: grafana\n  namespace: prometheus\nspec:\n  hosts:\n  - grafana.cluster.io\n  gateways:\n  - grafana\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: prometheus-grafana\n        port:\n          number: 80\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: grafana\n  namespace: prometheus\nspec:\n  gateways:\n  - grafana\n  hosts:\n  - grafana.cluster.io\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: prometheus-grafana\n        port:\n          number: 80\n",
            "yaml_incluster": "6d58a9a9364aad32d482b2775a06ef62458d476bc55cd7d928082d9bbb9ea2ba"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kiali_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways/kiali-gateway",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "2e393e719b52a6f60b54afb46f776952a46966832587c3837b097e920f0b2dd4",
            "live_uid": "b6ff9afc-a2e1-4ed6-81a7-b6745dc6dfee",
            "name": "kiali-gateway",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b6ff9afc-a2e1-4ed6-81a7-b6745dc6dfee",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - kiali.cluster.io\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - kiali.cluster.io\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "2e393e719b52a6f60b54afb46f776952a46966832587c3837b097e920f0b2dd4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod",
            "helm_release.kiali-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kiali_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/istio-system/virtualservices/kiali",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "cbafbc175dce186605617ea348ab073e70e10fd117fb1429fc274902d6ba076f",
            "live_uid": "ec4fc348-5742-47eb-aa2d-a1ca7d8edac8",
            "name": "kiali",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ec4fc348-5742-47eb-aa2d-a1ca7d8edac8",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  hosts:\n  - kiali.cluster.io\n  gateways:\n  - kiali-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  gateways:\n  - kiali-gateway\n  hosts:\n  - kiali.cluster.io\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n",
            "yaml_incluster": "cbafbc175dce186605617ea348ab073e70e10fd117fb1429fc274902d6ba076f"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod",
            "helm_release.kiali-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "podmonitor_generic",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/prometheus/podmonitors/generic-stats-monitor",
            "ignore_fields": null,
            "kind": "PodMonitor",
            "live_manifest_incluster": "7f0c28de3acfd3dd699a42f19317621b9c48b484548c05b0fa3c294d26f92d06",
            "live_uid": "972ce676-abbb-40f6-89ae-80e3bb855317",
            "name": "generic-stats-monitor",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "972ce676-abbb-40f6-89ae-80e3bb855317",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: generic-stats-monitor\n  namespace: prometheus\n  labels:\n    monitoring: istio-proxies\n    release: istio\nspec:\n  selector:\n    matchExpressions:\n    - {key: istio-prometheus-ignore, operator: DoesNotExist}\n  namespaceSelector:\n    any: true\n  jobLabel: generic-stats\n  podMetricsEndpoints:\n  - path: /metrics\n    interval: 15s\n    relabelings:\n    - action: keep\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  labels:\n    monitoring: istio-proxies\n    release: istio\n  name: generic-stats-monitor\n  namespace: prometheus\nspec:\n  jobLabel: generic-stats\n  namespaceSelector:\n    any: true\n  podMetricsEndpoints:\n  - interval: 15s\n    path: /metrics\n    relabelings:\n    - action: keep\n  selector:\n    matchExpressions:\n    - key: istio-prometheus-ignore\n      operator: DoesNotExist\n",
            "yaml_incluster": "7f0c28de3acfd3dd699a42f19317621b9c48b484548c05b0fa3c294d26f92d06"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "podmonitor_stats_monitor",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/istio-system/podmonitors/envoy-stats-monitor",
            "ignore_fields": null,
            "kind": "PodMonitor",
            "live_manifest_incluster": "c39cdd5967633b73e90ecb00e09d813e74da2e2d007943d0e590ef1dd3eb67c9",
            "live_uid": "54714243-c937-4f59-bdab-ea398a7fe7aa",
            "name": "envoy-stats-monitor",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "54714243-c937-4f59-bdab-ea398a7fe7aa",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  name: envoy-stats-monitor\n  namespace: istio-system\n  labels:\n    monitoring: istio-proxies\n    release: istio\nspec:\n  selector:\n    matchExpressions:\n    - {key: istio-prometheus-ignore, operator: DoesNotExist}\n  namespaceSelector:\n    any: true\n  jobLabel: envoy-stats\n  podMetricsEndpoints:\n  - path: /stats/prometheus\n    interval: 15s\n    relabelings:\n    - action: keep\n      sourceLabels: [__meta_kubernetes_pod_container_name]\n      regex: \"istio-proxy\"\n    - action: keep\n      sourceLabels: [__meta_kubernetes_pod_annotationpresent_prometheus_io_scrape]\n    - action: replace\n      regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\n      replacement: '[$2]:$1'\n      sourceLabels:\n      - __meta_kubernetes_pod_annotation_prometheus_io_port\n      - __meta_kubernetes_pod_ip\n      targetLabel: __address__\n    - action: replace\n      regex: (\\d+);((([0-9]+?)(\\.|$)){4})\n      replacement: $2:$1\n      sourceLabels:\n      - __meta_kubernetes_pod_annotation_prometheus_io_port\n      - __meta_kubernetes_pod_ip\n      targetLabel: __address__\n    - action: labeldrop\n      regex: \"__meta_kubernetes_pod_label_(.+)\"\n    - sourceLabels: [__meta_kubernetes_namespace]\n      action: replace\n      targetLabel: namespace\n    - sourceLabels: [__meta_kubernetes_pod_name]\n      action: replace\n      targetLabel: pod_name\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: PodMonitor\nmetadata:\n  labels:\n    monitoring: istio-proxies\n    release: istio\n  name: envoy-stats-monitor\n  namespace: istio-system\nspec:\n  jobLabel: envoy-stats\n  namespaceSelector:\n    any: true\n  podMetricsEndpoints:\n  - interval: 15s\n    path: /stats/prometheus\n    relabelings:\n    - action: keep\n      regex: istio-proxy\n      sourceLabels:\n      - __meta_kubernetes_pod_container_name\n    - action: keep\n      sourceLabels:\n      - __meta_kubernetes_pod_annotationpresent_prometheus_io_scrape\n    - action: replace\n      regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\n      replacement: '[$2]:$1'\n      sourceLabels:\n      - __meta_kubernetes_pod_annotation_prometheus_io_port\n      - __meta_kubernetes_pod_ip\n      targetLabel: __address__\n    - action: replace\n      regex: (\\d+);((([0-9]+?)(\\.|$)){4})\n      replacement: $2:$1\n      sourceLabels:\n      - __meta_kubernetes_pod_annotation_prometheus_io_port\n      - __meta_kubernetes_pod_ip\n      targetLabel: __address__\n    - action: labeldrop\n      regex: __meta_kubernetes_pod_label_(.+)\n    - action: replace\n      sourceLabels:\n      - __meta_kubernetes_namespace\n      targetLabel: namespace\n    - action: replace\n      sourceLabels:\n      - __meta_kubernetes_pod_name\n      targetLabel: pod_name\n  selector:\n    matchExpressions:\n    - key: istio-prometheus-ignore\n      operator: DoesNotExist\n",
            "yaml_incluster": "c39cdd5967633b73e90ecb00e09d813e74da2e2d007943d0e590ef1dd3eb67c9"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "servicemonitor_istio",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/prometheus/servicemonitors/istio-monitor",
            "ignore_fields": null,
            "kind": "ServiceMonitor",
            "live_manifest_incluster": "29d84902ba2b6c62ff6a69c649b06b7600b89ebfc6ec8cec32b80b4398203b00",
            "live_uid": "7d24951a-68be-4724-8ea8-649bf9049e2e",
            "name": "istio-monitor",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7d24951a-68be-4724-8ea8-649bf9049e2e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: istio-monitor\n  namespace: prometheus\n  labels:\n    release: prometheus\nspec:\n  namespaceSelector:\n    any: true\n  selector:\n    matchLabels:\n      istio: pilot \n  endpoints:\n  - port: http-monitoring\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    release: prometheus\n  name: istio-monitor\n  namespace: prometheus\nspec:\n  endpoints:\n  - port: http-monitoring\n  namespaceSelector:\n    any: true\n  selector:\n    matchLabels:\n      istio: pilot\n",
            "yaml_incluster": "29d84902ba2b6c62ff6a69c649b06b7600b89ebfc6ec8cec32b80b4398203b00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "servicemonitor_istio_component_monitor",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/istio-system/servicemonitors/istio-component-monitor",
            "ignore_fields": null,
            "kind": "ServiceMonitor",
            "live_manifest_incluster": "77dce97698dd245cdfdab428bec8d177343af2b7a758a9775ee49175d8dac61a",
            "live_uid": "0078fe29-e767-4b9d-9afc-38c3cad07e98",
            "name": "istio-component-monitor",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0078fe29-e767-4b9d-9afc-38c3cad07e98",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: istio-component-monitor\n  namespace: istio-system\n  labels:\n    monitoring: istio-components\n    release: istio\nspec:\n  jobLabel: istio\n  targetLabels: [app]\n  selector:\n    matchExpressions:\n    - {key: istio, operator: In, values: [pilot]}\n  namespaceSelector:\n    any: true\n  endpoints:\n  - port: http-monitoring\n    interval: 15s\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    monitoring: istio-components\n    release: istio\n  name: istio-component-monitor\n  namespace: istio-system\nspec:\n  endpoints:\n  - interval: 15s\n    port: http-monitoring\n  jobLabel: istio\n  namespaceSelector:\n    any: true\n  selector:\n    matchExpressions:\n    - key: istio\n      operator: In\n      values:\n      - pilot\n  targetLabels:\n  - app\n",
            "yaml_incluster": "77dce97698dd245cdfdab428bec8d177343af2b7a758a9775ee49175d8dac61a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "servicemonitor_istio_envoy",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/prometheus/servicemonitors/istio-envoy-monitor",
            "ignore_fields": null,
            "kind": "ServiceMonitor",
            "live_manifest_incluster": "4eea086faedf6caad47bef5b858de7a0deaed9f207c71c509408f9e492d3f86b",
            "live_uid": "04a00698-f808-4d34-8aa6-91f62f141401",
            "name": "istio-envoy-monitor",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "04a00698-f808-4d34-8aa6-91f62f141401",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: istio-envoy-monitor\n  namespace: prometheus\nspec:\n  namespaceSelector:\n    any: true\n  selector:\n    matchExpressions:\n    - {key: app, operator: Exists}\n  endpoints:\n  - targetPort: 15090\n    interval: 15s\n    path: /stats/prometheus\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: istio-envoy-monitor\n  namespace: prometheus\nspec:\n  endpoints:\n  - interval: 15s\n    path: /stats/prometheus\n    targetPort: 15090\n  namespaceSelector:\n    any: true\n  selector:\n    matchExpressions:\n    - key: app\n      operator: Exists\n",
            "yaml_incluster": "4eea086faedf6caad47bef5b858de7a0deaed9f207c71c509408f9e492d3f86b"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "servicemonitor_istio_ingress",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/prometheus/servicemonitors/istio-ingress-monitor",
            "ignore_fields": null,
            "kind": "ServiceMonitor",
            "live_manifest_incluster": "feabb5a4f568824189ec2e9bcd3d1e714942ec01ca42d2b2b5442235fe0d25d8",
            "live_uid": "119b2589-f2ac-4354-81a7-556ec142db77",
            "name": "istio-ingress-monitor",
            "namespace": "prometheus",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "119b2589-f2ac-4354-81a7-556ec142db77",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: istio-ingress-monitor\n  namespace: prometheus\n  labels:\n    release: prometheus\nspec:\n  namespaceSelector:\n    any: true\n  selector:\n    matchLabels:\n      istio: ingress \n  endpoints:\n  - port: http-monitoring\n",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    release: prometheus\n  name: istio-ingress-monitor\n  namespace: prometheus\nspec:\n  endpoints:\n  - port: http-monitoring\n  namespaceSelector:\n    any: true\n  selector:\n    matchLabels:\n      istio: ingress\n",
            "yaml_incluster": "feabb5a4f568824189ec2e9bcd3d1e714942ec01ca42d2b2b5442235fe0d25d8"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.prometheus"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
